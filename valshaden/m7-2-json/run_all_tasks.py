# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ JSON

import subprocess
import sys
import os

def run_task(task_file, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n{'='*60}")
    print(f"–ó–ê–ü–£–°–ö: {description}")
    print(f"–§–∞–π–ª: {task_file}")
    print('='*60)
    
    try:
        result = subprocess.run([sys.executable, task_file], 
                              capture_output=True, text=True, encoding='utf-8')
        
        if result.stdout:
            print("–í–´–í–û–î:")
            print(result.stdout)
        
        if result.stderr:
            print("–û–®–ò–ë–ö–ò:")
            print(result.stderr)
            
        if result.returncode == 0:
            print("‚úì –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û")
        else:
            print("‚úó –ó–ê–î–ê–ß–ê –ó–ê–í–ï–†–®–ò–õ–ê–°–¨ –° –û–®–ò–ë–ö–û–ô")
            
    except Exception as e:
        print(f"‚úó –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê: {e}")

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É"""
    
    tasks = [
        ("task1_expenses.py", "–ó–∞–¥–∞—á–∞ 1: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤"),
        ("task2_validator.py", "–ó–∞–¥–∞—á–∞ 2: –í–∞–ª–∏–¥–∞—Ç–æ—Ä –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
        ("task3_weather.py", "–ó–∞–¥–∞—á–∞ 3: –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ API"),
        ("task4_config.py", "–ó–∞–¥–∞—á–∞ 4: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"),
        ("task5_library.py", "–ó–∞–¥–∞—á–∞ 5: –ü–æ–∏—Å–∫ –ø–æ JSON-–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    ]
    
    print("üöÄ –ó–ê–ü–£–°–ö –í–°–ï–• –ó–ê–î–ê–ß –ü–û JSON")
    print(f"–í—Å–µ–≥–æ –∑–∞–¥–∞—á: {len(tasks)}")
    
    —É—Å–ø–µ—à–Ω—ã—Ö = 0
    
    for task_file, description in tasks:
        if os.path.exists(task_file):
            run_task(task_file, description)
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
            if os.path.exists(task_file):
                —É—Å–ø–µ—à–Ω—ã—Ö += 1
        else:
            print(f"\n‚úó –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù: {task_file}")
    
    print(f"\n{'='*60}")
    print(f"–ò–¢–û–ì–ò: {—É—Å–ø–µ—à–Ω—ã—Ö}/{len(tasks)} –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω–æ")
    print('='*60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\n–°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:")
    json_files = [f for f in os.listdir('.') if f.endswith('.json')]
    for file in sorted(json_files):
        size = os.path.getsize(file)
        print(f"  üìÑ {file} ({size} –±–∞–π—Ç)")

if __name__ == "__main__":
    main()