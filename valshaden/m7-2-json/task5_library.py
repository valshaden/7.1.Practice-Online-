# Задача 5: Поиск по JSON-базе данных (рекурсивный обход)

import json

# Создаем структуру библиотеки на русском
библиотека_данные = {
    "библиотека": {
        "название": "Центральная городская библиотека",
        "адрес": "ул. Пушкина, д. 10",
        "разделы": [
            {
                "название": "Художественная литература",
                "книги": [
                    {"название": "1984", "автор": "Джордж Оруэлл", "доступна": False},
                    {"название": "Великий Гэтсби", "автор": "Фрэнсис Фицджеральд", "доступна": True},
                    {"название": "Война и мир", "автор": "Лев Толстой", "доступна": True},
                    {"название": "Анна Каренина", "автор": "Лев Толстой", "доступна": False}
                ]
            },
            {
                "название": "Научная литература",
                "книги": [
                    {"название": "Краткая история времени", "автор": "Стивен Хокинг", "доступна": True},
                    {"название": "Космос", "автор": "Карл Саган", "доступна": False},
                    {"название": "Происхождение видов", "автор": "Чарльз Дарвин", "доступна": True}
                ]
            },
            {
                "название": "Техническая литература",
                "подразделы": [
                    {
                        "название": "Программирование",
                        "книги": [
                            {"название": "Чистый код", "автор": "Роберт Мартин", "доступна": True},
                            {"название": "Python для всех", "автор": "Марк Лутц", "доступна": True}
                        ]
                    }
                ]
            }
        ]
    }
}

def find_available_books_by_author(данные, имя_автора):
    """
    Рекурсивно ищет доступные книги указанного автора
    """
    найденные_книги = []
    
    def рекурсивный_поиск(объект):
        if isinstance(объект, dict):
            # Если это книга с нужным автором и она доступна
            if (объект.get("автор") == имя_автора and 
                объект.get("доступна") == True and 
                "название" in объект):
                найденные_книги.append(объект["название"])
            
            # Рекурсивно обходим все значения словаря
            for значение in объект.values():
                рекурсивный_поиск(значение)
                
        elif isinstance(объект, list):
            # Рекурсивно обходим все элементы списка
            for элемент in объект:
                рекурсивный_поиск(элемент)
    
    рекурсивный_поиск(данные)
    return найденные_книги

def find_all_books():
    """Находит все книги в библиотеке"""
    все_книги = []
    
    def рекурсивный_поиск(объект):
        if isinstance(объект, dict):
            # Если это книга
            if "название" in объект and "автор" in объект and "доступна" in объект:
                все_книги.append({
                    "название": объект["название"],
                    "автор": объект["автор"],
                    "доступна": объект["доступна"]
                })
            
            # Рекурсивно обходим все значения
            for значение in объект.values():
                рекурсивный_поиск(значение)
                
        elif isinstance(объект, list):
            for элемент in объект:
                рекурсивный_поиск(элемент)
    
    рекурсивный_поиск(библиотека_данные)
    return все_книги

def get_library_stats():
    """Получает статистику библиотеки"""
    все_книги = find_all_books()
    
    доступные = sum(1 for книга in все_книги if книга["доступна"])
    недоступные = len(все_книги) - доступные
    
    авторы = set(книга["автор"] for книга in все_книги)
    
    return {
        "всего_книг": len(все_книги),
        "доступных": доступные,
        "недоступных": недоступные,
        "авторов": len(авторы)
    }

# Сохраняем данные библиотеки в файл
with open('библиотека.json', 'w', encoding='utf-8') as f:
    json.dump(библиотека_данные, f, ensure_ascii=False, indent=2)

# Загружаем данные из файла
with open('библиотека.json', 'r', encoding='utf-8') as f:
    библиотека = json.load(f)

print("=== ПОИСК КНИГ В БИБЛИОТЕКЕ ===\n")

# Тестируем поиск по разным авторам
авторы_для_поиска = ["Лев Толстой", "Стивен Хокинг", "Роберт Мартин", "Неизвестный Автор"]

for автор in авторы_для_поиска:
    книги = find_available_books_by_author(библиотека, автор)
    print(f"Доступные книги автора '{автор}':")
    if книги:
        for книга in книги:
            print(f"  - {книга}")
    else:
        print("  Нет доступных книг")
    print()

# Показываем все книги
print("=== ВСЕ КНИГИ В БИБЛИОТЕКЕ ===")
все_книги = find_all_books()
for книга in все_книги:
    статус = "✓ доступна" if книга["доступна"] else "✗ недоступна"
    print(f"{книга['название']} - {книга['автор']} ({статус})")

# Статистика
print(f"\n=== СТАТИСТИКА БИБЛИОТЕКИ ===")
статистика = get_library_stats()
for ключ, значение in статистика.items():
    print(f"{ключ.replace('_', ' ').title()}: {значение}")

# Сохраняем результаты поиска
результаты_поиска = {}
for автор in авторы_для_поиска:
    результаты_поиска[автор] = find_available_books_by_author(библиотека, автор)

with open('результаты_поиска.json', 'w', encoding='utf-8') as f:
    json.dump(результаты_поиска, f, ensure_ascii=False, indent=2)