# Задача 2: Валидатор профиля пользователя

import json

def validate_user_profile(данные):
    """Валидация профиля пользователя"""
    ошибки = []
    
    # Проверка имени пользователя
    if 'имя_пользователя' not in данные:
        ошибки.append("имя_пользователя: обязательное поле")
    elif len(данные['имя_пользователя']) < 3:
        ошибки.append("имя_пользователя: должно быть не менее 3 символов")
    
    # Проверка email
    if 'email' not in данные:
        ошибки.append("email: обязательное поле")
    elif '@' not in данные['email']:
        ошибки.append("email: должен содержать символ '@'")
    
    # Проверка возраста (опциональное поле)
    if 'возраст' in данные:
        возраст = данные['возраст']
        if not isinstance(возраст, int) or возраст < 14 or возраст > 120:
            ошибки.append("возраст: должен быть от 14 до 120 лет")
    
    # Проверка хобби (опциональное поле)
    if 'хобби' in данные:
        хобби = данные['хобби']
        if not isinstance(хобби, list) or len(хобби) == 0:
            ошибки.append("хобби: должен быть непустым списком строк")
    
    # Возвращаем результат
    if ошибки:
        return {"статус": "ошибка", "ошибки": ошибки}
    else:
        return {"статус": "успех"}

# Тестирование валидатора
тестовые_данные = [
    # Валидные данные
    {
        "имя_пользователя": "иван123",
        "email": "ivan@mail.ru",
        "возраст": 25,
        "хобби": ["программирование", "чтение"]
    },
    
    # Невалидные данные
    {
        "имя_пользователя": "ал",
        "email": "не-email",
        "возраст": 13
    },
    
    # Минимальные валидные данные
    {
        "имя_пользователя": "петр",
        "email": "petr@yandex.ru"
    }
]

print("=== ТЕСТИРОВАНИЕ ВАЛИДАТОРА ===")
for i, данные in enumerate(тестовые_данные, 1):
    print(f"\nТест {i}:")
    print(f"Входные данные: {json.dumps(данные, ensure_ascii=False)}")
    результат = validate_user_profile(данные)
    print(f"Результат: {json.dumps(результат, ensure_ascii=False, indent=2)}")

# Сохраняем примеры в файлы
with open('валидный_профиль.json', 'w', encoding='utf-8') as f:
    json.dump(тестовые_данные[0], f, ensure_ascii=False, indent=2)

with open('невалидный_профиль.json', 'w', encoding='utf-8') as f:
    json.dump(тестовые_данные[1], f, ensure_ascii=False, indent=2)